# This CircleCI configuration is for testing the drupal-skeleton. For project-specific
# testing, use the configuration installed by palantirnet/the-build.

version: 2.1
jobs:
  build:
    working_directory: ~/drupal-skeleton
    docker:
      - image: cimg/php:8.1-browsers
      - image: cimg/mysql:5.7
        command: --max_allowed_packet=16M
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: circle_test

    environment:
      - PALANTIR_ENVIRONMENT: circleci
      - DRUPAL_ROOT: web
      - NODE_VERSION: 18

    steps:
      - run:
          name: Install packages
          command: sudo apt-get update && sudo apt-get install -y default-mysql-client
      - run:
          name: Configure PHP
          command: |
            echo "sendmail_path=/bin/true" | sudo tee -a "/etc/php.d/circleci.ini"
      - run:
          name: Create artifacts directory
          command: mkdir /tmp/artifacts
      - run:
          name: Configure URL in /etc/hosts
          command: echo 127.0.0.1 ${CIRCLE_PROJECT_REPONAME}.local | sudo tee -a /etc/hosts
      - run:
          name: Update to latest version of Composer
          command: sudo composer self-update

      # Note: phing and drupal-check have mutually exclusive requirements.
      # It'd be better to add drupal-check as a dependency of the drupal project
      # rather than as part of the virtual environment, but this will have to do
      # for now. Also note, drupal-check is added as part of the-vagrant so it
      # is available to run within our VM.
      - run:
          name: Install drupal-check
          command: |
            curl -O -L https://github.com/mglaman/drupal-check/releases/download/1.0.9/drupal-check.phar
            mkdir --parents ~/bin
            mv drupal-check.phar ~/bin/drupal-check
            chmod +x ~/bin/drupal-check

      # Source cache
      - restore_cache:
          keys:
            - source-v1-{{ .Branch }}
            - source-v1-

      - checkout

      # Source cache - update when branch changes
      - save_cache:
          key: source-v1-{{ .Branch }}
          paths:
            - ".git"

      # Composer package cache
      - restore_cache:
          keys:
            - composer-v1-

      - run:
          name: Composer install
          command: composer install --no-interaction --prefer-dist

      # Composer package cache - update when the contents of the Composer cache directory
      # change
      - run: ls -1R ~/.cache/composer/ > /tmp/composer-cache.txt
      - save_cache:
          key: composer-v1-{{ checksum "/tmp/composer-cache.txt" }}
          paths:
              - ~/.cache/composer

      - run:
          name: Install the-build in the project
          command: printf 'drupal-skeleton\nhttp://drupal-skeleton.local\npantheon\nn' | vendor/bin/the-build-installer

      - run:
          name: Wait for DB
          # Dockerize is preinstalled in circleci/* docker image
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      - run:
          name: Build Drupal's settings.php
          command: vendor/bin/phing build
      - run:
          name: Install Drupal
          command: printf 'y' | vendor/bin/phing install -Ddrupal.validate_clean_config.bypass=yes -Ddrupal.sites.default.profile=standard
      - run:
          name: Run Behat tests
          command: |
            nohup php -S ${CIRCLE_PROJECT_REPONAME}.local:8000 -t $(pwd)/web/ > /tmp/artifacts/phpd.log 2>&1 &
            google-chrome --headless --remote-debugging-port=9222 &>/dev/null &
            vendor/bin/behat --profile=circleci --suite=default --strict --format=junit --out=/tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - store_test_results:
          path: /tmp/artifacts

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - gh-pages
                - /.*(readme|documentation).*/
